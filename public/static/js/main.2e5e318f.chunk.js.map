{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","token","localStorage","getItem","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","checkingFinish","login","user","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","ok","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e5e318f.chunk.js","sourcesContent":["export const types = {\n  uiOpenModal: '[ui] Open Modal',\n  uiCloseModal: '[ui] Close Modal',\n\n  eventSetActive: '[event] Set active',\n  eventLogout: '[event] Logout event',\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActiveEvent: '[event] Clear active event',\n  eventUpdated: '[event] Event updated',\n  eventDeleted: '[event] Event deleted',\n  eventLoaded: '[event] Events loaded',\n\n  authCheckingFinish: '[auth] Finish checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartTokenRenew: '[auth] Start toekn renew',\n  authLogout: '[auth] Logout',\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid:null,\n  // name: null\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false,\n      };\n    case types.authCheckingFinish:\n      return {\n        ...state,\n        checking: false,\n      };\n    case types.authLogout:\n      return {\n        checking: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\nconst initialState = {\n  events: [],\n  activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload,\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      };\n    case types.eventClearActiveEvent:\n      return {\n        ...state,\n        activeEvent: null,\n      };\n    case types.eventUpdated:\n      return {\n        ...state,\n        events: state.events.map((e) =>\n          e.id === action.payload.id ? action.payload : e\n        ),\n      };\n    case types.eventDeleted:\n      return {\n        ...state,\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\n        activeEvent: null,\n      };\n    case types.eventLoaded:\n      return {\n        ...state,\n        events: [...action.payload],\n      };\n    case types.eventLogout:\n      return {\n        ...initialState,\n      };\n    default:\n      return state;\n  }\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true,\n      };\n\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\n\nexport const rootReducer = combineReducers({\n  ui: uiReducer,\n  calendar: calendarReducer,\n  auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n","const baseUrl = process.env.REACT_APP_API_RUL;\nconst token = localStorage.getItem('token') || '';\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  if (method === 'GET') {\n    return fetch(url);\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n  const url = `${baseUrl}/${endpoint}`;\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n    });\n  } else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token,\n      },\n      body: JSON.stringify(data),\n    });\n  }\n};\n\nexport { fetchWithoutToken, fetchWithToken };\n","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n  return events.map((e) => ({\n    ...e,\n    end: moment(e.end).toDate(),\n    start: moment(e.start).toDate(),\n  }));\n};\n","import Swal from 'sweetalert2';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\nimport { types } from '../types/types';\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().auth;\n    try {\n      const resp = await fetchWithToken('events', event, 'POST');\n      const body = await resp.json();\n      if (body.ok) {\n        eventAddNew.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name,\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event,\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event,\n});\n\nexport const eventClearActiveEvent = () => ({\n  type: types.eventClearActiveEvent,\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventUpdated(event));\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventUpdated = (event) => ({\n  type: types.eventUpdated,\n  payload: event,\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const { id } = getState().calendar.activeEvent;\n    try {\n      const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n\n      if (body.ok) {\n        dispatch(eventDeleted());\n      } else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventDeleted = () => ({\n  type: types.eventDeleted,\n});\n\nexport const eventStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchWithToken('events');\n      const body = await resp.json();\n      const events = prepareEvents(body.events);\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const eventLogout = () => ({\n  type: types.eventLogout,\n});\n\nconst eventLoaded = (events) => ({\n  type: types.eventLoaded,\n  payload: events,\n});\n","import { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n\n    if (body.token) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const resp = await fetchWithoutToken(\n      'auth/new',\n      { name, email, password },\n      'POST'\n    );\n    const body = await resp.json();\n\n    if (body.token) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const resp = await fetchWithToken('auth/renew');\n    const body = await resp.json();\n\n    if (body.token) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n\n      dispatch(\n        login({\n          uid: body.uid,\n          name: body.name,\n        })\n      );\n    } else {\n      dispatch(checkingFinish());\n    }\n  };\n};\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nconst checkingFinish = () => ({\n  type: types.authCheckingFinish,\n});\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nconst logout = () => ({\n  type: types.authLogout,\n});\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n  return [values, handleInputChange, reset];\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: 'jorge@test.com',\n    lPassword: '123456',\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: 'Doncan',\n    rEmail: 'doncan@test.com',\n    rPassword1: '123456',\n    rPassword2: '123456',\n  });\n\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const dispatch = useDispatch();\n\n  const { lEmail, lPassword } = formLoginValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLogin(lEmail, lPassword));\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (rPassword1 !== rPassword2) {\n      return Swal.fire('Error', 'Passwords must be the same', 'error');\n    }\n    dispatch(startRegister(rEmail, rPassword1, rName));\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Ingreso</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"lEmail\"\n                value={lEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"lPassword\"\n                value={lPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Registro</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Nombre\"\n                name=\"rName\"\n                value={rName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo\"\n                name=\"rEmail\"\n                value={rEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                name=\"rPassword1\"\n                value={rPassword1}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Repita la contraseña\"\n                name=\"rPassword2\"\n                value={rPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Exit</span>\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const CalendarEvent = ({ event }) => {\n  const { title, user } = event;\n  return (\n    <div>\n      <span>{title}</span>\n      <strong>- {user.name}</strong>\n    </div>\n  );\n};\n","import { types } from '../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal,\n});\n","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport {\n  eventClearActiveEvent,\n  eventStartAddNew,\n  eventStartUpdate,\n} from '../../actions/events';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: nowPlus1.toDate(),\n};\n\nexport const CalendarModal = () => {\n  const { modalOpen } = useSelector((state) => state.ui);\n  const { activeEvent } = useSelector((state) => state.calendar);\n  const dispatch = useDispatch();\n\n  const [dateStart, setDateStart] = useState(now.toDate());\n  const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n  const [titleValid, setTitleValid] = useState(true);\n\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { notes, title, start, end } = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    } else {\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value,\n    });\n  };\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActiveEvent());\n    setFormValues(initEvent);\n  };\n\n  const handleStartDateChange = (e) => {\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e,\n    });\n  };\n  const handleEndDateChange = (e) => {\n    setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e,\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      Swal.fire(\n        'Error',\n        'End date must be greater than the start date',\n        'error'\n      );\n      return;\n    }\n    if (title.trim().length < 2) {\n      setTitleValid(false);\n      return;\n    }\n\n    if (activeEvent) {\n      dispatch(eventStartUpdate(formValues));\n    } else {\n      dispatch(eventStartAddNew(formValues));\n    }\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-fondo\"\n    >\n      <h1>{activeEvent ? 'Edit event' : 'New event'}</h1>\n      <hr />\n      <form onSubmit={handleSubmitForm} className=\"container\">\n        <div className=\"form-group\">\n          <label>Start datetime</label>\n          <DateTimePicker\n            className=\"form-control\"\n            onChange={handleStartDateChange}\n            value={dateStart}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>End datetime</label>\n          <DateTimePicker\n            className=\"form-control\"\n            onChange={handleEndDateChange}\n            minDate={dateStart}\n            value={dateEnd}\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Title and notes</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder=\"Event title\"\n            name=\"title\"\n            value={title}\n            autoComplete=\"off\"\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Brief description\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notes\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            Aditional information\n          </small>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\n          <i className=\"far fa-save\"></i>\n          <span> Save</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n  const dispatch = useDispatch();\n\n  const handleClickNew = () => {\n    dispatch(uiOpenModal());\n  };\n  return (\n    <button onClick={handleClickNew} className=\"btn btn-primary fab\">\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  };\n\n  return (\n    <button onClick={handleDelete} className=\"btn btn-danger fab-danger\">\n      <i className=\"fas fa-trash\"></i>\n      <span> Borrar evento</span>\n    </button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { uiOpenModal } from '../../actions/ui';\nimport {\n  eventClearActiveEvent,\n  eventSetActive,\n  eventStartLoading,\n} from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const { events, activeEvent } = useSelector((state) => state.calendar);\n  const { uid } = useSelector((state) => state.auth);\n\n  const [lastView, setLastView] = useState(\n    localStorage.getItem('lastView') || 'month'\n  );\n\n  useEffect(() => {\n    dispatch(eventStartLoading());\n  }, [dispatch]);\n\n  const onDoubleClick = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onViewCahnge = (e) => {\n    setLastView(e);\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: uid === event.user._id ? '#367CF7' : '#465660',\n      borderRadius: '0px',\n      opacity: 0.8,\n      display: 'block',\n      color: 'white',\n    };\n\n    return {\n      style,\n    };\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActiveEvent());\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        eventPropGetter={eventStyleGetter}\n        onDoubleClickEvent={onDoubleClick}\n        onSelectEvent={onSelectEvent}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        onView={onViewCahnge}\n        view={lastView}\n        components={{\n          event: CalendarEvent,\n        }}\n      />\n      <AddNewFab />\n      {activeEvent && <DeleteEventFab />}\n      <CalendarModal />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.prototype = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nPublicRoute.prototype = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const { checking, uid } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return <h5>Wait...</h5>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n"],"sourceRoot":""}